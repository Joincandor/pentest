require "pentest/version"
require "pentest/runner"
require "pentest/logger"
require "pentest/ruby_parser"
require "pentest/ast_utils"
require "pentest/checkers"

module Pentest
  class Error < StandardError; end

  #Run Pentest scan. Returns Tracker object.
  #
  #Options:
  #
  #  * :app_path - path to root of Rails app (required)
  class << self
    def run options
      Logger.info "launched"

      Logger.info "Loading Rails project..."
      app_path = File.expand_path(options[:app_path])

      # TODO: Check if app_path directory exists
      # TODO: Check if app_path directory is valid rails project
      # TODO: Detect rails version
      require File.expand_path('config/environment', app_path)

      Logger.info "Loaded Rails project #{get_project_name.inspect}"

      controller = UsersController.new
      ast = RubyParser.get_sexp(controller.method(:update))
      p AstUtils.search_for_params(ast)
    end

    def get_project_name
      if defined?(::Rails)
        ::Rails.application.class.parent_name
      end
    end
  end
end
