require 'pentest/checkers/base_checker'
require 'pentest/payload'
require 'pairwise'

class Pentest::SqliChecker < Pentest::BaseChecker
  Pentest::Checkers.add self

  @description = "Checks for SQL injections"

  SQLI_PAYLOADS = File.read(File.expand_path('../fuzzers/sqli.txt', File.dirname(__FILE__))).lines.map(&:strip).select {|l| l.size > 5 && l =~ /\W/}
  CRACKER_PAYLOAD = %q(<>"'%;()&+)

  def generate_payloads(params, seeds, injection_point)
    values_list = if params.size - 1 <= 0
      [[]]
    elsif params.size - 1 == 1
      seeds.map {|s| [s]}
    else
      Pairwise.combinations(*([seeds] * (params.size - 1)))
    end

    values_list.map do |values|
      values.insert(injection_point, %q(<>"'%;()&+))
      Pentest::Payload.new({params: params, values: values})
    end.take(50)
  end
end