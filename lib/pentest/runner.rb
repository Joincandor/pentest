require 'pentest/endpoint'

module Pentest
  class Runner
    def initialize(app_path, setups)
      @app_path = app_path
      @setups = setups
      @routes = ::Rails.application.routes.routes

      @ingredients = Set.new
    end

    def run
      @endpoints = @routes.map do |route|
        endpoint = Endpoint.new(route, @app_path)
      end.select(&:valid?)

      Logger.debug "Fetched #{@endpoints.size} endpoints"
      Logger.print_seperator

      @setups.each do |setup_proc|
        self.instance_eval &setup_proc
      end

      # TODO: Add ingredients when not enough
      Logger.debug "Registered Ingredients: #{@ingredients.inspect}"

      payloads = []
      @endpoints.each do |endpoint|
        # next unless endpoint.route.defaults[:controller] == 'users'
        payloads += endpoint.scan!(@ingredients)
        Logger.print_seperator
      end

      if payloads.empty?
        Logger.info 'No vulnerabilities found'
        return nil
      end

      Logger.error "#{payloads.size} vulnerabilities found!!"

      payloads.each_with_index do |payload, index|
        puts ''
        puts ''
        puts payload.to_s(index)
      end

      puts ''

      :error
    end

    private

    def add_ingredient(ingredient)
      @ingredients << ingredient.to_s
    end
  end
end