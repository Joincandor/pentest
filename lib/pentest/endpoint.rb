module Pentest
  class Endpoint
    def initialize(route)
      @route = route

      @controller = route.defaults[:controller]
      @action = route.defaults[:action]
      p [@controller, @action]

      return if @controller.nil? || @action.nil?

      @controller_name = ::ActiveSupport::Inflector.camelize(@controller) + "Controller"
      @controller_class = ::ActiveSupport::Inflector.constantize(@controller_name)
      binding.pry
      p [@controller_class, @controller_class.method_defined?(@action.to_sym)]
    end

    def valid?
      !@controller.nil? && @action.nil? && @controller_class.method_defined?(@action.to_sym)
    end

    def scan
      param_usages = AstUtils.search_for_params(exp)
      p param_usages
    end

    private

    def path(options = {})
      @route.required_parts.each do |part|
        options[part] ||= ":#{part}"
      end

      @route.format(options)
    end

    def is_valid_route?(route)
      controller = route.defaults[:controller]
      action = route.defaults[:action]
      !controller.nil? && !action.nil?
    end
  end
end